{"ast":null,"code":"import { Subject, BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let DataSharingService = /*#__PURE__*/(() => {\n  class DataSharingService {\n    constructor() {\n      this.SharingData = new Subject();\n      this.subject3 = new BehaviorSubject(0);\n      this.products = [{\n        name: \"apples\",\n        price: 10,\n        onStock: \"Y\"\n      }, {\n        name: \"bananas\",\n        price: 5,\n        onStock: \"Y\"\n      }, {\n        name: \"tomatoes\",\n        price: 11,\n        onStock: \"Y\"\n      }];\n      /*//COLD OBSERVABLE\r\n       console.log('OBSERVABLES:');\r\n       const observable$ = new Observable((observer) => {\r\n         const interval$ = interval(1000);\r\n         interval$.subscribe((value: number) => {\r\n           observer.next(value);\r\n         });\r\n       });\r\n       observable$.subscribe((value) => {\r\n         console.log('Cold #1 - Received:', value);\r\n       });\r\n              setTimeout(() => {\r\n         observable$.subscribe((value) => {\r\n           console.log('Cold #2 - Received:', value);\r\n         });\r\n       }, 2500);\r\n      //HOT OBSERVABLE\r\n       const subject$ = new Subject();\r\n              interval(1000).subscribe((value: number) => {\r\n         subject$.next(value);\r\n       });\r\n              const observable1$ = new Observable((observer) => {\r\n         subject$.subscribe((value:any) => {\r\n           observer.next(value);\r\n         });\r\n       });\r\n              observable1$.subscribe((value) => {\r\n         console.log('Hot #1 - Received:', value);\r\n       });\r\n              setTimeout(() => {\r\n         observable1$.subscribe((value) => {\r\n           console.log('Hot #2 - Received:', value);\r\n         });\r\n       }, 2500);*/\n    }\n\n  }\n\n  DataSharingService.ɵfac = function DataSharingService_Factory(t) {\n    return new (t || DataSharingService)();\n  };\n\n  DataSharingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataSharingService,\n    factory: DataSharingService.ɵfac,\n    providedIn: 'root'\n  });\n  return DataSharingService;\n})();","map":null,"metadata":{},"sourceType":"module"}