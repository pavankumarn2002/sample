{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/atm-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../atm-inner.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\n\nfunction AtmTransactionComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Account Number Is Required. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AtmTransactionComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, AtmTransactionComponent_div_11_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"accountNo\"].errors && ctx_r0.f[\"accountNo\"].errors[\"required\"]);\n  }\n}\n\nfunction AtmTransactionComponent_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name Is Required.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AtmTransactionComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, AtmTransactionComponent_div_16_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f[\"name\"].errors && ctx_r1.f[\"name\"].errors[\"required\"]);\n  }\n}\n\nfunction AtmTransactionComponent_div_21_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"User Id Is Required.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AtmTransactionComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, AtmTransactionComponent_div_21_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f[\"userId\"].errors && ctx_r2.f[\"userId\"].errors[\"required\"]);\n  }\n}\n\nexport let AtmTransactionComponent = /*#__PURE__*/(() => {\n  class AtmTransactionComponent {\n    constructor(atm, router, route, inner) {\n      this.atm = atm;\n      this.router = router;\n      this.route = route;\n      this.inner = inner;\n      this.messages = [];\n      this.route.paramMap.subscribe(params => {\n        this.id = Number(params.get('id'));\n        this.atm.getElementById(this.id).subscribe(c => {\n          this.data = c;\n          this.currentAccountNo = this.data.accountNo;\n          this.currentName = this.data.name;\n          this.currentUserId = this.data.userId;\n          this.currentDate = new Date();\n        });\n      });\n      this.inner.getPosts().subscribe(res => {\n        this.lastBalance = res;\n        console.log(this.lastBalance);\n      });\n      /*this.id = this.route.snapshot.params['postId'];\r\n      this.contactService.getElementById(this.id).subscribe((data: Crud)=>{\r\n        this.post = data;\r\n      });*/\n    }\n\n    ngOnInit() {\n      this.form = new FormGroup({\n        accountNo: new FormControl('', Validators.required),\n        name: new FormControl('', Validators.required),\n        userId: new FormControl('', Validators.required),\n        deposit: new FormControl('', Validators.required),\n        withdraw: new FormControl('', Validators.required),\n        balance: new FormControl('', Validators.required),\n        date: new FormControl('', Validators.required),\n        location: new FormControl('', Validators.required)\n      });\n    }\n\n    get f() {\n      return this.form.controls;\n    }\n\n    addVal(a) {\n      const inputVal = a.target.value;\n\n      if (inputVal > 0) {\n        this.currentBalance = Number(this.lastBalance) + Number(inputVal);\n      }\n    }\n\n    subVal(a) {\n      const inputVal = a.target.value;\n\n      if (inputVal > 0) {\n        if (inputVal <= this.lastBalance && inputVal > 0) {\n          this.currentBalance = Number(this.lastBalance) - Number(inputVal);\n        } else {}\n      }\n    }\n\n    submits() {\n      this.atm.create(this.form.value).subscribe(res => {\n        console.log('Post created successfully!');\n        this.router.navigateByUrl('atm/atm-data');\n      });\n    }\n\n  }\n\n  AtmTransactionComponent.ɵfac = function AtmTransactionComponent_Factory(t) {\n    return new (t || AtmTransactionComponent)(i0.ɵɵdirectiveInject(i1.AtmServiceService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.AtmInnerService));\n  };\n\n  AtmTransactionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AtmTransactionComponent,\n    selectors: [[\"app-atm-transaction\"]],\n    decls: 44,\n    vars: 10,\n    consts: [[1, \"container\", \"transaction-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"row-cols-2\"], [1, \"col\", \"form-group\"], [\"for\", \"accountNo\"], [\"formControlName\", \"accountNo\", \"id\", \"accountNo\", \"type\", \"text\", 1, \"form-control\", 3, \"ngModel\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"name\"], [\"formControlName\", \"name\", \"id\", \"name\", \"type\", \"text\", 1, \"form-control\", 3, \"ngModel\"], [\"for\", \"userId\"], [\"formControlName\", \"userId\", \"id\", \"userId\", \"type\", \"text\", 1, \"form-control\", 3, \"ngModel\"], [\"for\", \"deposit\"], [\"formControlName\", \"deposit\", \"id\", \"deposit\", \"type\", \"text\", 1, \"form-control\", 3, \"blur\"], [\"for\", \"withdraw\"], [\"formControlName\", \"withdraw\", \"id\", \"withdraw\", \"type\", \"text\", 1, \"form-control\", 3, \"blur\"], [\"for\", \"balance\"], [\"formControlName\", \"balance\", \"id\", \"balance\", \"type\", \"text\", \"readonly\", \"\", 1, \"form-control\", 3, \"ngModel\"], [\"for\", \"location\"], [\"formControlName\", \"location\", \"id\", \"location\", \"type\", \"text\", 1, \"form-control\"], [\"for\", \"date\"], [\"formControlName\", \"date\", \"id\", \"date\", \"type\", \"date\", 1, \"form-control\", 3, \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"submit-btn\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n    template: function AtmTransactionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\");\n        i0.ɵɵtext(2, \"Transation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"h5\");\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function AtmTransactionComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.submits();\n        });\n        i0.ɵɵelementStart(6, \"div\", 2)(7, \"div\", 3)(8, \"label\", 4);\n        i0.ɵɵtext(9, \"Account Number :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 5);\n        i0.ɵɵtemplate(11, AtmTransactionComponent_div_11_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 7);\n        i0.ɵɵtext(14, \"Name :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵtemplate(16, AtmTransactionComponent_div_16_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 3)(18, \"label\", 9);\n        i0.ɵɵtext(19, \"User Id :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 10);\n        i0.ɵɵtemplate(21, AtmTransactionComponent_div_21_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 3)(23, \"label\", 11);\n        i0.ɵɵtext(24, \"Deposit :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"input\", 12);\n        i0.ɵɵlistener(\"blur\", function AtmTransactionComponent_Template_input_blur_25_listener($event) {\n          return ctx.addVal($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 3)(27, \"label\", 13);\n        i0.ɵɵtext(28, \"Withdraw :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"input\", 14);\n        i0.ɵɵlistener(\"blur\", function AtmTransactionComponent_Template_input_blur_29_listener($event) {\n          return ctx.subVal($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"div\", 3)(31, \"label\", 15);\n        i0.ɵɵtext(32, \"Balance :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 3)(35, \"label\", 17);\n        i0.ɵɵtext(36, \"Location :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(37, \"input\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 3)(39, \"label\", 19);\n        i0.ɵɵtext(40, \"Date :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(41, \"input\", 20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(42, \"button\", 21);\n        i0.ɵɵtext(43, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"Current Balance - \", ctx.lastBalance, \" Rs\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.currentAccountNo);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.f[\"accountNo\"].touched && ctx.f[\"accountNo\"].invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.currentName);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.f[\"name\"].touched && ctx.f[\"name\"].invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.currentUserId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.f[\"userId\"].touched && ctx.f[\"userId\"].invalid);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.currentBalance);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.currentDate);\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i5.NgIf],\n    styles: [\".transaction-container[_ngcontent-%COMP%]{background-color:#e7e7e7;padding:25px}label[_ngcontent-%COMP%]{margin-top:15px}.submit-btn[_ngcontent-%COMP%]{margin-top:12px}button[_ngcontent-%COMP%]{text-align:center;border-radius:15px;border:2px solid #73AD21;width:-moz-fit-content;width:fit-content;margin:5px;padding:10px}\"]\n  });\n  return AtmTransactionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}