{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../service/auth.service\";\nimport * as i4 from \"@angular/common\";\n\nfunction RegisterComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Account Number Is Required. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, RegisterComponent_div_12_div_1_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"userid\"].errors && ctx_r0.f[\"userid\"].errors[\"required\"]);\n  }\n}\n\nfunction RegisterComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"password Is Required.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, RegisterComponent_div_17_div_1_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f[\"password\"].errors && ctx_r1.f[\"password\"].errors[\"required\"]);\n  }\n}\n\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(formBuilder, router, authService) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.authService = authService;\n    }\n\n    ngOnInit() {\n      this.registerForm = this.formBuilder.group({\n        userid: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n      this.returnUrl = '/doc/auth/dashboard';\n      this.authService.logout();\n    } // convenience getter for easy access to form fields  \n\n\n    get f() {\n      return this.registerForm.controls;\n    }\n\n    register() {\n      this.authService.create(this.registerForm.value).subscribe(res => {\n        console.log('Post created successfully!');\n        this.router.navigateByUrl('/doc/auth/login');\n      });\n    }\n\n  }\n\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 21,\n    vars: 4,\n    consts: [[1, \"container\", \"register-container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-6\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"col\", \"form-group\"], [\"for\", \"accountNo\"], [\"formControlName\", \"userid\", \"id\", \"userid\", \"type\", \"text\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"name\"], [\"formControlName\", \"password\", \"id\", \"password\", \"type\", \"text\", 1, \"form-control\"], [1, \"col-xs-12\", \"form-group\", \"text-right\", \"register-area\"], [\"type\", \"submit\", 1, \"btn\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\");\n        i0.ɵɵtext(4, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\");\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.register();\n        });\n        i0.ɵɵelementStart(8, \"div\", 4)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"userid :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵtemplate(12, RegisterComponent_div_12_Template, 2, 1, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 4)(14, \"label\", 8);\n        i0.ɵɵtext(15, \"password :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 9);\n        i0.ɵɵtemplate(17, RegisterComponent_div_17_Template, 2, 1, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 10)(19, \"button\", 11);\n        i0.ɵɵtext(20, \"Generate New Account\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.message);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.f[\"userid\"].touched && ctx.f[\"userid\"].invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.f[\"password\"].touched && ctx.f[\"password\"].invalid);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i4.NgIf],\n    styles: [\".register-container[_ngcontent-%COMP%]{padding:25px;height:max-content}h3[_ngcontent-%COMP%]{color:#cc54ae}label[_ngcontent-%COMP%]{font-weight:700}.register-area[_ngcontent-%COMP%]{margin-top:25px}.form-group[_ngcontent-%COMP%]{margin-top:15px}.register-area[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{text-align:center;border-radius:7px;border:2px solid #cc54ae;width:-moz-fit-content;width:fit-content;margin:5px;padding:0 15px;font-size:20px;color:#cc54ae;background-color:#ebebeb}button[_ngcontent-%COMP%]{text-align:center;border-radius:7px;border:2px solid #cc54ae;width:-moz-fit-content;width:fit-content;margin-top:25px;padding:0 15px;background-color:#fafafa;color:#000;font-weight:500}\"]\n  });\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}